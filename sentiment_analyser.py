# -*- coding: utf-8 -*-
"""sentiment_analyser.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QONi_PwL92etFvaappllk-ZiMNPrgXgF
"""

from transformers import AutoTokenizer
from transformers import AutoModelForSequenceClassification
from scipy.special import softmax
import pandas as pd
import numpy as np
from tqdm import tqdm

MODEL = f"cardiffnlp/twitter-roberta-base-sentiment"
tokenizer = AutoTokenizer.from_pretrained(MODEL)
model = AutoModelForSequenceClassification.from_pretrained(MODEL)

df = pd.read_csv('amazon_review.csv')
df['ID'] = np.arange(1,len(df)+1)
df.head()

def polarity_scores_roberta(example):
  encoded_text = tokenizer(example, return_tensors='pt', truncation=True, max_length = 512)
  output = model(**encoded_text)
  scores = output[0][0].detach().numpy()
  scores = softmax(scores)
  scores_dict = {
      'roberta_neg' : scores[0],
      'roberta_neu' : scores[1],
      'roberta_pos' : scores[2]
  }
  return scores_dict

res = {}
for i, row in tqdm(df.iterrows(), total=len(df)):
  try:
    text = row['reviewText']
    myid = row['ID']
    result = polarity_scores_roberta(text)
    rob = result
    res[myid] = rob
  except ValueError:
    continue

results_df = pd.DataFrame(res).T
results_df = results_df.reset_index().rename(columns = {'index': 'ID'})
results_df = results_df.merge(df, how = 'left')

results_df.head()